#[derive(Debug, Clone, Copy, Default, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub enum Ease {
    #[default]
    Linear,
    BackIn,
    BackInOut,
    BackOut,
    BounceIn,
    BounceInOut,
    BounceOut,
    CircIn,
    CircInOut,
    CircOut,
    CubicIn,
    CubicInOut,
    CubicOut,
    ElasticIn,
    ElasticInOut,
    ElasticOut,
    ExpoIn,
    ExpoInOut,
    ExpoOut,
    QuadIn,
    QuadInOut,
    QuadOut,
    QuartIn,
    QuartInOut,
    QuartOut,
    QuintIn,
    QuintInOut,
    QuintOut,
    Reverse,
    Roundtrip,
    SineIn,
    SineInOut,
    SineOut,
}

impl Ease {
    #[must_use]
    pub fn ease(&self, t: f32) -> f32 {
        match self {
            Self::Linear => simple_easing::linear(t),
            Self::BackIn => simple_easing::back_in(t),
            Self::BackInOut => simple_easing::back_in_out(t),
            Self::BackOut => simple_easing::back_out(t),
            Self::BounceIn => simple_easing::bounce_in(t),
            Self::BounceInOut => simple_easing::bounce_in_out(t),
            Self::BounceOut => simple_easing::bounce_out(t),
            Self::CircIn => simple_easing::circ_in(t),
            Self::CircInOut => simple_easing::circ_in_out(t),
            Self::CircOut => simple_easing::circ_out(t),
            Self::CubicIn => simple_easing::cubic_in(t),
            Self::CubicInOut => simple_easing::cubic_in_out(t),
            Self::CubicOut => simple_easing::cubic_out(t),
            Self::ElasticIn => simple_easing::elastic_in(t),
            Self::ElasticInOut => simple_easing::elastic_in_out(t),
            Self::ElasticOut => simple_easing::elastic_out(t),
            Self::ExpoIn => simple_easing::expo_in(t),
            Self::ExpoInOut => simple_easing::expo_in_out(t),
            Self::ExpoOut => simple_easing::expo_out(t),
            Self::QuadIn => simple_easing::quad_in(t),
            Self::QuadInOut => simple_easing::quad_in_out(t),
            Self::QuadOut => simple_easing::quad_out(t),
            Self::QuartIn => simple_easing::quart_in(t),
            Self::QuartInOut => simple_easing::quart_in_out(t),
            Self::QuartOut => simple_easing::quart_out(t),
            Self::QuintIn => simple_easing::quint_in(t),
            Self::QuintInOut => simple_easing::quint_in_out(t),
            Self::QuintOut => simple_easing::quint_out(t),
            Self::Reverse => simple_easing::reverse(t),
            Self::Roundtrip => simple_easing::roundtrip(t),
            Self::SineIn => simple_easing::sine_in(t),
            Self::SineInOut => simple_easing::sine_in_out(t),
            Self::SineOut => simple_easing::sine_out(t),
        }
    }
}
